{"ast":null,"code":"var _jsxFileName = \"/workspace/src/pages/TVShows.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { tvAPI } from '../services/api';\nimport ContentCard from '../components/ContentCard';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TVShows = () => {\n  _s();\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('popular');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const categories = [{\n    key: 'popular',\n    name: 'Popular'\n  }, {\n    key: 'top_rated',\n    name: 'Top Rated'\n  }, {\n    key: 'trending',\n    name: 'Trending'\n  }];\n  useEffect(() => {\n    const fetchTVShows = async () => {\n      setLoading(true);\n      try {\n        let data;\n        switch (category) {\n          case 'popular':\n            data = await tvAPI.getPopularTVShows(page);\n            break;\n          case 'top_rated':\n            data = await tvAPI.getTopRatedTVShows(page);\n            break;\n          case 'trending':\n            data = await tvAPI.getTrendingTVShows();\n            break;\n          default:\n            data = await tvAPI.getPopularTVShows(page);\n        }\n        setTvShows(data.results || []);\n        setTotalPages(data.total_pages || 1);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching TV shows:', error);\n        setLoading(false);\n      }\n    };\n    fetchTVShows();\n  }, [category, page]);\n  const handleCategoryChange = newCategory => {\n    setCategory(newCategory);\n    setPage(1);\n  };\n  const handlePageChange = newPage => {\n    setPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tv-shows-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      style: {\n        paddingTop: '8rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: \"TV Shows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filter\",\n        children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-btn ${category === cat.key ? 'active' : ''}`,\n          onClick: () => handleCategoryChange(cat.key),\n          children: cat.name\n        }, cat.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {\n        type: \"skeleton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-grid\",\n          children: tvShows.map(show => /*#__PURE__*/_jsxDEV(ContentCard, {\n            item: show,\n            type: \"tv\"\n          }, show.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pagination-btn\",\n            onClick: () => handlePageChange(page - 1),\n            disabled: page === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-info\",\n            children: [\"Page \", page, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pagination-btn\",\n            onClick: () => handlePageChange(page + 1),\n            disabled: page === totalPages,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TVShows, \"/ICfwpAWyqUdtIXfa7KJCZkuRUk=\");\n_c = TVShows;\nexport default TVShows;\nvar _c;\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"names":["React","useState","useEffect","tvAPI","ContentCard","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","TVShows","_s","tvShows","setTvShows","loading","setLoading","category","setCategory","page","setPage","totalPages","setTotalPages","categories","key","name","fetchTVShows","data","getPopularTVShows","getTopRatedTVShows","getTrendingTVShows","results","total_pages","error","console","handleCategoryChange","newCategory","handlePageChange","newPage","window","scrollTo","top","behavior","className","children","style","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","type","show","item","id","disabled","_c","$RefreshReg$"],"sources":["/workspace/src/pages/TVShows.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { tvAPI } from '../services/api';\nimport ContentCard from '../components/ContentCard';\nimport Loading from '../components/Loading';\n\nconst TVShows = () => {\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('popular');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const categories = [\n    { key: 'popular', name: 'Popular' },\n    { key: 'top_rated', name: 'Top Rated' },\n    { key: 'trending', name: 'Trending' }\n  ];\n\n  useEffect(() => {\n    const fetchTVShows = async () => {\n      setLoading(true);\n      try {\n        let data;\n        switch (category) {\n          case 'popular':\n            data = await tvAPI.getPopularTVShows(page);\n            break;\n          case 'top_rated':\n            data = await tvAPI.getTopRatedTVShows(page);\n            break;\n          case 'trending':\n            data = await tvAPI.getTrendingTVShows();\n            break;\n          default:\n            data = await tvAPI.getPopularTVShows(page);\n        }\n        \n        setTvShows(data.results || []);\n        setTotalPages(data.total_pages || 1);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching TV shows:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchTVShows();\n  }, [category, page]);\n\n  const handleCategoryChange = (newCategory) => {\n    setCategory(newCategory);\n    setPage(1);\n  };\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"tv-shows-page\">\n      <div className=\"content-section\" style={{ paddingTop: '8rem' }}>\n        <h1 className=\"section-title\">TV Shows</h1>\n        \n        {/* Category Filter */}\n        <div className=\"category-filter\">\n          {categories.map((cat) => (\n            <button\n              key={cat.key}\n              className={`category-btn ${category === cat.key ? 'active' : ''}`}\n              onClick={() => handleCategoryChange(cat.key)}\n            >\n              {cat.name}\n            </button>\n          ))}\n        </div>\n\n        {/* TV Shows Grid */}\n        {loading ? (\n          <Loading type=\"skeleton\" />\n        ) : (\n          <>\n            <div className=\"content-grid\">\n              {tvShows.map((show) => (\n                <ContentCard key={show.id} item={show} type=\"tv\" />\n              ))}\n            </div>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"pagination\">\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page - 1)}\n                  disabled={page === 1}\n                >\n                  Previous\n                </button>\n                <span className=\"page-info\">\n                  Page {page} of {totalPages}\n                </span>\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page + 1)}\n                  disabled={page === totalPages}\n                >\n                  Next\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TVShows;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}