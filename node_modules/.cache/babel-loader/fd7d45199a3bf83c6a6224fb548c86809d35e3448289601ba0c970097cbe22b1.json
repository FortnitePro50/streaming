{"ast":null,"code":"import React,{useState,useEffect}from'react';import{tvAPI}from'../services/api';import ContentCard from'../components/ContentCard';import Loading from'../components/Loading';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TVShows=()=>{const[tvShows,setTvShows]=useState([]);const[loading,setLoading]=useState(true);const[category,setCategory]=useState('popular');const[page,setPage]=useState(1);const[totalPages,setTotalPages]=useState(1);const categories=[{key:'popular',name:'Popular'},{key:'top_rated',name:'Top Rated'},{key:'trending',name:'Trending'}];useEffect(()=>{const fetchTVShows=async()=>{setLoading(true);try{let data;switch(category){case'popular':data=await tvAPI.getPopularTVShows(page);break;case'top_rated':data=await tvAPI.getTopRatedTVShows(page);break;case'trending':data=await tvAPI.getTrendingTVShows();break;default:data=await tvAPI.getPopularTVShows(page);}setTvShows(data.results||[]);setTotalPages(data.total_pages||1);setLoading(false);}catch(error){console.error('Error fetching TV shows:',error);setLoading(false);}};fetchTVShows();},[category,page]);const handleCategoryChange=newCategory=>{setCategory(newCategory);setPage(1);};const handlePageChange=newPage=>{setPage(newPage);window.scrollTo({top:0,behavior:'smooth'});};return/*#__PURE__*/_jsx(\"div\",{className:\"tv-shows-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-section\",style:{paddingTop:'8rem'},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"section-title\",children:\"TV Shows\"}),/*#__PURE__*/_jsx(\"div\",{className:\"category-filter\",children:categories.map(cat=>/*#__PURE__*/_jsx(\"button\",{className:\"category-btn \".concat(category===cat.key?'active':''),onClick:()=>handleCategoryChange(cat.key),children:cat.name},cat.key))}),loading?/*#__PURE__*/_jsx(Loading,{type:\"skeleton\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"content-grid\",children:tvShows.map(show=>/*#__PURE__*/_jsx(ContentCard,{item:show,type:\"tv\"},show.id))}),totalPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>handlePageChange(page-1),disabled:page===1,children:\"Previous\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"page-info\",children:[\"Page \",page,\" of \",totalPages]}),/*#__PURE__*/_jsx(\"button\",{className:\"pagination-btn\",onClick:()=>handlePageChange(page+1),disabled:page===totalPages,children:\"Next\"})]})]})]})});};export default TVShows;","map":{"version":3,"names":["React","useState","useEffect","tvAPI","ContentCard","Loading","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TVShows","tvShows","setTvShows","loading","setLoading","category","setCategory","page","setPage","totalPages","setTotalPages","categories","key","name","fetchTVShows","data","getPopularTVShows","getTopRatedTVShows","getTrendingTVShows","results","total_pages","error","console","handleCategoryChange","newCategory","handlePageChange","newPage","window","scrollTo","top","behavior","className","children","style","paddingTop","map","cat","concat","onClick","type","show","item","id","disabled"],"sources":["/workspace/src/pages/TVShows.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { tvAPI } from '../services/api';\nimport ContentCard from '../components/ContentCard';\nimport Loading from '../components/Loading';\n\nconst TVShows = () => {\n  const [tvShows, setTvShows] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('popular');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const categories = [\n    { key: 'popular', name: 'Popular' },\n    { key: 'top_rated', name: 'Top Rated' },\n    { key: 'trending', name: 'Trending' }\n  ];\n\n  useEffect(() => {\n    const fetchTVShows = async () => {\n      setLoading(true);\n      try {\n        let data;\n        switch (category) {\n          case 'popular':\n            data = await tvAPI.getPopularTVShows(page);\n            break;\n          case 'top_rated':\n            data = await tvAPI.getTopRatedTVShows(page);\n            break;\n          case 'trending':\n            data = await tvAPI.getTrendingTVShows();\n            break;\n          default:\n            data = await tvAPI.getPopularTVShows(page);\n        }\n        \n        setTvShows(data.results || []);\n        setTotalPages(data.total_pages || 1);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching TV shows:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchTVShows();\n  }, [category, page]);\n\n  const handleCategoryChange = (newCategory) => {\n    setCategory(newCategory);\n    setPage(1);\n  };\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"tv-shows-page\">\n      <div className=\"content-section\" style={{ paddingTop: '8rem' }}>\n        <h1 className=\"section-title\">TV Shows</h1>\n        \n        {/* Category Filter */}\n        <div className=\"category-filter\">\n          {categories.map((cat) => (\n            <button\n              key={cat.key}\n              className={`category-btn ${category === cat.key ? 'active' : ''}`}\n              onClick={() => handleCategoryChange(cat.key)}\n            >\n              {cat.name}\n            </button>\n          ))}\n        </div>\n\n        {/* TV Shows Grid */}\n        {loading ? (\n          <Loading type=\"skeleton\" />\n        ) : (\n          <>\n            <div className=\"content-grid\">\n              {tvShows.map((show) => (\n                <ContentCard key={show.id} item={show} type=\"tv\" />\n              ))}\n            </div>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"pagination\">\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page - 1)}\n                  disabled={page === 1}\n                >\n                  Previous\n                </button>\n                <span className=\"page-info\">\n                  Page {page} of {totalPages}\n                </span>\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page + 1)}\n                  disabled={page === totalPages}\n                >\n                  Next\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TVShows;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}