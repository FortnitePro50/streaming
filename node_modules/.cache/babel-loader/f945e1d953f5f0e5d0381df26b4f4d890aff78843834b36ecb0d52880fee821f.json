{"ast":null,"code":"var _jsxFileName = \"/workspace/src/pages/Movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { movieAPI } from '../services/api';\nimport ContentCard from '../components/ContentCard';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('popular');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const categories = [{\n    key: 'popular',\n    name: 'Popular'\n  }, {\n    key: 'top_rated',\n    name: 'Top Rated'\n  }, {\n    key: 'upcoming',\n    name: 'Upcoming'\n  }, {\n    key: 'trending',\n    name: 'Trending'\n  }];\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        let data;\n        switch (category) {\n          case 'popular':\n            data = await movieAPI.getPopularMovies(page);\n            break;\n          case 'top_rated':\n            data = await movieAPI.getTopRatedMovies(page);\n            break;\n          case 'upcoming':\n            data = await movieAPI.getUpcomingMovies(page);\n            break;\n          case 'trending':\n            data = await movieAPI.getTrendingMovies();\n            break;\n          default:\n            data = await movieAPI.getPopularMovies(page);\n        }\n        setMovies(data.results || []);\n        setTotalPages(data.total_pages || 1);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [category, page]);\n  const handleCategoryChange = newCategory => {\n    setCategory(newCategory);\n    setPage(1);\n  };\n  const handlePageChange = newPage => {\n    setPage(newPage);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      style: {\n        paddingTop: '8rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title\",\n        children: \"Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-filter\",\n        children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `category-btn ${category === cat.key ? 'active' : ''}`,\n          onClick: () => handleCategoryChange(cat.key),\n          children: cat.name\n        }, cat.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {\n        type: \"skeleton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-grid\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(ContentCard, {\n            item: movie,\n            type: \"movie\"\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pagination-btn\",\n            onClick: () => handlePageChange(page - 1),\n            disabled: page === 1,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"page-info\",\n            children: [\"Page \", page, \" of \", totalPages]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pagination-btn\",\n            onClick: () => handlePageChange(page + 1),\n            disabled: page === totalPages,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"tZQ1LAOO2o5AjUo7YWyHxUPH5vQ=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useState","useEffect","movieAPI","ContentCard","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Movies","_s","movies","setMovies","loading","setLoading","category","setCategory","page","setPage","totalPages","setTotalPages","categories","key","name","fetchMovies","data","getPopularMovies","getTopRatedMovies","getUpcomingMovies","getTrendingMovies","results","total_pages","error","console","handleCategoryChange","newCategory","handlePageChange","newPage","window","scrollTo","top","behavior","className","children","style","paddingTop","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","onClick","type","movie","item","id","disabled","_c","$RefreshReg$"],"sources":["/workspace/src/pages/Movies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { movieAPI } from '../services/api';\nimport ContentCard from '../components/ContentCard';\nimport Loading from '../components/Loading';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [category, setCategory] = useState('popular');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const categories = [\n    { key: 'popular', name: 'Popular' },\n    { key: 'top_rated', name: 'Top Rated' },\n    { key: 'upcoming', name: 'Upcoming' },\n    { key: 'trending', name: 'Trending' }\n  ];\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        let data;\n        switch (category) {\n          case 'popular':\n            data = await movieAPI.getPopularMovies(page);\n            break;\n          case 'top_rated':\n            data = await movieAPI.getTopRatedMovies(page);\n            break;\n          case 'upcoming':\n            data = await movieAPI.getUpcomingMovies(page);\n            break;\n          case 'trending':\n            data = await movieAPI.getTrendingMovies();\n            break;\n          default:\n            data = await movieAPI.getPopularMovies(page);\n        }\n        \n        setMovies(data.results || []);\n        setTotalPages(data.total_pages || 1);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [category, page]);\n\n  const handleCategoryChange = (newCategory) => {\n    setCategory(newCategory);\n    setPage(1);\n  };\n\n  const handlePageChange = (newPage) => {\n    setPage(newPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"movies-page\">\n      <div className=\"content-section\" style={{ paddingTop: '8rem' }}>\n        <h1 className=\"section-title\">Movies</h1>\n        \n        {/* Category Filter */}\n        <div className=\"category-filter\">\n          {categories.map((cat) => (\n            <button\n              key={cat.key}\n              className={`category-btn ${category === cat.key ? 'active' : ''}`}\n              onClick={() => handleCategoryChange(cat.key)}\n            >\n              {cat.name}\n            </button>\n          ))}\n        </div>\n\n        {/* Movies Grid */}\n        {loading ? (\n          <Loading type=\"skeleton\" />\n        ) : (\n          <>\n            <div className=\"content-grid\">\n              {movies.map((movie) => (\n                <ContentCard key={movie.id} item={movie} type=\"movie\" />\n              ))}\n            </div>\n\n            {/* Pagination */}\n            {totalPages > 1 && (\n              <div className=\"pagination\">\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page - 1)}\n                  disabled={page === 1}\n                >\n                  Previous\n                </button>\n                <span className=\"page-info\">\n                  Page {page} of {totalPages}\n                </span>\n                <button\n                  className=\"pagination-btn\"\n                  onClick={() => handlePageChange(page + 1)}\n                  disabled={page === totalPages}\n                >\n                  Next\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}