{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams,useNavigate}from'react-router-dom';import{movieAPI,tvAPI,vidsrcAPI}from'../services/api';import Loading from'../components/Loading';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Watch=()=>{var _content$vote_average;const{type,id,season,episode}=useParams();const navigate=useNavigate();const[content,setContent]=useState(null);const[loading,setLoading]=useState(true);const[videoLoading,setVideoLoading]=useState(true);const[seasons,setSeasons]=useState([]);const[episodes,setEpisodes]=useState([]);const[currentSeason,setCurrentSeason]=useState(season||1);const[currentEpisode,setCurrentEpisode]=useState(episode||1);useEffect(()=>{const fetchContent=async()=>{try{if(type==='movie'){const movieData=await movieAPI.getMovieDetails(id);setContent(movieData);}else if(type==='tv'){const tvData=await tvAPI.getTVShowDetails(id);setContent(tvData);if(tvData!==null&&tvData!==void 0&&tvData.seasons){setSeasons(tvData.seasons);// Fetch episodes for the current season\nconst seasonData=await tvAPI.getSeasonDetails(id,currentSeason);setEpisodes((seasonData===null||seasonData===void 0?void 0:seasonData.episodes)||[]);}}}catch(error){console.error('Error fetching content:',error);}finally{setLoading(false);}};fetchContent();},[type,id,currentSeason]);const getEmbedUrl=()=>{if(type==='movie'){return vidsrcAPI.getMovieEmbedUrl(id);}else if(type==='tv'){return vidsrcAPI.getEpisodeEmbedUrl(id,currentSeason,currentEpisode);}return'';};const handleSeasonChange=async newSeason=>{setCurrentSeason(newSeason);setCurrentEpisode(1);try{const seasonData=await tvAPI.getSeasonDetails(id,newSeason);setEpisodes((seasonData===null||seasonData===void 0?void 0:seasonData.episodes)||[]);}catch(error){console.error('Error fetching season data:',error);}};const handleEpisodeChange=newEpisode=>{setCurrentEpisode(newEpisode);navigate(\"/watch/tv/\".concat(id,\"/\").concat(currentSeason,\"/\").concat(newEpisode));};const goBack=()=>{navigate(-1);};if(loading){return/*#__PURE__*/_jsx(Loading,{text:\"Loading content...\"});}if(!content){return/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Content not found\"}),/*#__PURE__*/_jsx(\"button\",{onClick:goBack,className:\"back-button\",children:\"Go Back\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"watch-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"video-player\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"player-controls\",children:/*#__PURE__*/_jsx(\"button\",{onClick:goBack,className:\"back-button\",children:\"\\u2190 Back\"})}),videoLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"video-loading\",children:/*#__PURE__*/_jsx(Loading,{text:\"Loading video...\"})}),/*#__PURE__*/_jsx(\"iframe\",{src:getEmbedUrl(),title:content.title||content.name,allowFullScreen:true,onLoad:()=>setVideoLoading(false),style:{display:videoLoading?'none':'block'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"watch-info\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"content-section\",children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"watch-title\",children:[content.title||content.name,type==='tv'&&/*#__PURE__*/_jsxs(\"span\",{className:\"episode-info\",children:[' ',\"S\",currentSeason,\"E\",currentEpisode]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"watch-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"rating\",children:[\"\\u2B50 \",(_content$vote_average=content.vote_average)===null||_content$vote_average===void 0?void 0:_content$vote_average.toFixed(1)]}),/*#__PURE__*/_jsx(\"span\",{className:\"year\",children:new Date(content.release_date||content.first_air_date).getFullYear()}),content.runtime&&/*#__PURE__*/_jsxs(\"span\",{className:\"runtime\",children:[content.runtime,\" min\"]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"watch-description\",children:content.overview}),type==='tv'&&/*#__PURE__*/_jsxs(\"div\",{className:\"tv-controls\",children:[seasons.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"season-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Season:\"}),/*#__PURE__*/_jsx(\"select\",{value:currentSeason,onChange:e=>handleSeasonChange(parseInt(e.target.value)),children:seasons.map(season=>/*#__PURE__*/_jsxs(\"option\",{value:season.season_number,children:[\"Season \",season.season_number]},season.season_number))})]}),episodes.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"episode-selector\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Episode:\"}),/*#__PURE__*/_jsx(\"select\",{value:currentEpisode,onChange:e=>handleEpisodeChange(parseInt(e.target.value)),children:episodes.map(ep=>/*#__PURE__*/_jsxs(\"option\",{value:ep.episode_number,children:[\"Episode \",ep.episode_number,\": \",ep.name]},ep.episode_number))})]})]})]})})]});};export default Watch;","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","movieAPI","tvAPI","vidsrcAPI","Loading","jsx","_jsx","jsxs","_jsxs","Watch","_content$vote_average","type","id","season","episode","navigate","content","setContent","loading","setLoading","videoLoading","setVideoLoading","seasons","setSeasons","episodes","setEpisodes","currentSeason","setCurrentSeason","currentEpisode","setCurrentEpisode","fetchContent","movieData","getMovieDetails","tvData","getTVShowDetails","seasonData","getSeasonDetails","error","console","getEmbedUrl","getMovieEmbedUrl","getEpisodeEmbedUrl","handleSeasonChange","newSeason","handleEpisodeChange","newEpisode","concat","goBack","text","className","children","onClick","src","title","name","allowFullScreen","onLoad","style","display","vote_average","toFixed","Date","release_date","first_air_date","getFullYear","runtime","overview","length","value","onChange","e","parseInt","target","map","season_number","ep","episode_number"],"sources":["/workspace/src/pages/Watch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { movieAPI, tvAPI, vidsrcAPI } from '../services/api';\nimport Loading from '../components/Loading';\n\nconst Watch = () => {\n  const { type, id, season, episode } = useParams();\n  const navigate = useNavigate();\n  const [content, setContent] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [videoLoading, setVideoLoading] = useState(true);\n  const [seasons, setSeasons] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n  const [currentSeason, setCurrentSeason] = useState(season || 1);\n  const [currentEpisode, setCurrentEpisode] = useState(episode || 1);\n\n  useEffect(() => {\n    const fetchContent = async () => {\n      try {\n        if (type === 'movie') {\n          const movieData = await movieAPI.getMovieDetails(id);\n          setContent(movieData);\n        } else if (type === 'tv') {\n          const tvData = await tvAPI.getTVShowDetails(id);\n          setContent(tvData);\n          \n          if (tvData?.seasons) {\n            setSeasons(tvData.seasons);\n            \n            // Fetch episodes for the current season\n            const seasonData = await tvAPI.getSeasonDetails(id, currentSeason);\n            setEpisodes(seasonData?.episodes || []);\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching content:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchContent();\n  }, [type, id, currentSeason]);\n\n  const getEmbedUrl = () => {\n    if (type === 'movie') {\n      return vidsrcAPI.getMovieEmbedUrl(id);\n    } else if (type === 'tv') {\n      return vidsrcAPI.getEpisodeEmbedUrl(id, currentSeason, currentEpisode);\n    }\n    return '';\n  };\n\n  const handleSeasonChange = async (newSeason) => {\n    setCurrentSeason(newSeason);\n    setCurrentEpisode(1);\n    \n    try {\n      const seasonData = await tvAPI.getSeasonDetails(id, newSeason);\n      setEpisodes(seasonData?.episodes || []);\n    } catch (error) {\n      console.error('Error fetching season data:', error);\n    }\n  };\n\n  const handleEpisodeChange = (newEpisode) => {\n    setCurrentEpisode(newEpisode);\n    navigate(`/watch/tv/${id}/${currentSeason}/${newEpisode}`);\n  };\n\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  if (loading) {\n    return <Loading text=\"Loading content...\" />;\n  }\n\n  if (!content) {\n    return (\n      <div className=\"error-container\">\n        <h2>Content not found</h2>\n        <button onClick={goBack} className=\"back-button\">\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"watch-page\">\n      {/* Video Player */}\n      <div className=\"video-player\">\n        <div className=\"player-controls\">\n          <button onClick={goBack} className=\"back-button\">\n            ← Back\n          </button>\n        </div>\n        \n        {videoLoading && (\n          <div className=\"video-loading\">\n            <Loading text=\"Loading video...\" />\n          </div>\n        )}\n        \n        <iframe\n          src={getEmbedUrl()}\n          title={content.title || content.name}\n          allowFullScreen\n          onLoad={() => setVideoLoading(false)}\n          style={{ display: videoLoading ? 'none' : 'block' }}\n        />\n      </div>\n\n      {/* Content Info */}\n      <div className=\"watch-info\">\n        <div className=\"content-section\">\n          <h1 className=\"watch-title\">\n            {content.title || content.name}\n            {type === 'tv' && (\n              <span className=\"episode-info\">\n                {' '}S{currentSeason}E{currentEpisode}\n              </span>\n            )}\n          </h1>\n          \n          <div className=\"watch-meta\">\n            <span className=\"rating\">⭐ {content.vote_average?.toFixed(1)}</span>\n            <span className=\"year\">\n              {new Date(content.release_date || content.first_air_date).getFullYear()}\n            </span>\n            {content.runtime && (\n              <span className=\"runtime\">{content.runtime} min</span>\n            )}\n          </div>\n\n          <p className=\"watch-description\">{content.overview}</p>\n\n          {/* TV Show Controls */}\n          {type === 'tv' && (\n            <div className=\"tv-controls\">\n              {/* Season Selector */}\n              {seasons.length > 1 && (\n                <div className=\"season-selector\">\n                  <label>Season:</label>\n                  <select \n                    value={currentSeason} \n                    onChange={(e) => handleSeasonChange(parseInt(e.target.value))}\n                  >\n                    {seasons.map((season) => (\n                      <option key={season.season_number} value={season.season_number}>\n                        Season {season.season_number}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n\n              {/* Episode Selector */}\n              {episodes.length > 0 && (\n                <div className=\"episode-selector\">\n                  <label>Episode:</label>\n                  <select \n                    value={currentEpisode} \n                    onChange={(e) => handleEpisodeChange(parseInt(e.target.value))}\n                  >\n                    {episodes.map((ep) => (\n                      <option key={ep.episode_number} value={ep.episode_number}>\n                        Episode {ep.episode_number}: {ep.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Watch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}