{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/Loading.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = ({\n  text = 'Loading...',\n  type = 'spinner'\n}) => {\n  if (type === 'skeleton') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-grid\",\n      children: [...Array(12)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"skeleton\",\n          style: {\n            height: '300px',\n            borderRadius: '15px 15px 0 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeleton\",\n            style: {\n              height: '20px',\n              marginBottom: '10px',\n              borderRadius: '4px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeleton\",\n            style: {\n              height: '16px',\n              marginBottom: '10px',\n              borderRadius: '4px',\n              width: '70%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skeleton\",\n            style: {\n              height: '14px',\n              borderRadius: '4px',\n              width: '90%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Loading","text","type","className","children","Array","map","_","index","style","height","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","width","_c","$RefreshReg$"],"sources":["/workspace/src/components/Loading.js"],"sourcesContent":["import React from 'react';\n\nconst Loading = ({ text = 'Loading...', type = 'spinner' }) => {\n  if (type === 'skeleton') {\n    return (\n      <div className=\"content-grid\">\n        {[...Array(12)].map((_, index) => (\n          <div key={index} className=\"content-card\">\n            <div className=\"skeleton\" style={{ height: '300px', borderRadius: '15px 15px 0 0' }} />\n            <div className=\"card-content\">\n              <div className=\"skeleton\" style={{ height: '20px', marginBottom: '10px', borderRadius: '4px' }} />\n              <div className=\"skeleton\" style={{ height: '16px', marginBottom: '10px', borderRadius: '4px', width: '70%' }} />\n              <div className=\"skeleton\" style={{ height: '14px', borderRadius: '4px', width: '90%' }} />\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-spinner\" />\n      <div className=\"loading-text\">{text}</div>\n    </div>\n  );\n};\n\nexport default Loading;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC,IAAI,GAAG,YAAY;EAAEC,IAAI,GAAG;AAAU,CAAC,KAAK;EAC7D,IAAIA,IAAI,KAAK,UAAU,EAAE;IACvB,oBACEH,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1B,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC3BT,OAAA;QAAiBI,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACvCL,OAAA;UAAKI,SAAS,EAAC,UAAU;UAACM,KAAK,EAAE;YAAEC,MAAM,EAAE,OAAO;YAAEC,YAAY,EAAE;UAAgB;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvFhB,OAAA;UAAKI,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BL,OAAA;YAAKI,SAAS,EAAC,UAAU;YAACM,KAAK,EAAE;cAAEC,MAAM,EAAE,MAAM;cAAEM,YAAY,EAAE,MAAM;cAAEL,YAAY,EAAE;YAAM;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClGhB,OAAA;YAAKI,SAAS,EAAC,UAAU;YAACM,KAAK,EAAE;cAAEC,MAAM,EAAE,MAAM;cAAEM,YAAY,EAAE,MAAM;cAAEL,YAAY,EAAE,KAAK;cAAEM,KAAK,EAAE;YAAM;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAChHhB,OAAA;YAAKI,SAAS,EAAC,UAAU;YAACM,KAAK,EAAE;cAAEC,MAAM,EAAE,MAAM;cAAEC,YAAY,EAAE,KAAK;cAAEM,KAAK,EAAE;YAAM;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF,CAAC;MAAA,GANEP,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;EAEA,oBACEhB,OAAA;IAAKI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCL,OAAA;MAAKI,SAAS,EAAC;IAAiB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnChB,OAAA;MAAKI,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEH;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACG,EAAA,GAxBIlB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}